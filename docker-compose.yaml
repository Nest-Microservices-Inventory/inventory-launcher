version: '3'

services:

  # ===== NATS SERVER ======
  nats-server:
    container_name: nats
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"

  # === CLIENT GATEWAY ===
  client-gateway:
    container_name: client-gateway
    build:
      context: ./client-gateway
      dockerfile: dockerfile
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    environment:
      PORT: ${CLIENT_GATEWAY_PORT}
      NATS_SERVERS: ${NATS_SERVERS}
      
  # ===== PRODUCTS ======
  products-database:
    container_name: products-database
    image: postgres:13.5

    environment:
      POSTGRES_DB: products
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password

    ports:
      - 5432:5432

    volumes:
      - ./products-ms/postgres:/var/lib/postgresql/data

  products-microservice:
    depends_on:
      - products-database
    build:
      context: ./products-ms
      dockerfile: dockerfile
    environment:
      NATS_SERVERS: ${NATS_SERVERS}
      DATABASE_URL: ${PRODUCTS_DATABASE_URL}

  # ===== ORDERS ======
  orders-database:
    image: mysql

    restart: always
    environment:
      MYSQL_USER: admin
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

    ports:
      - 3307:3306

    volumes:
      - ./orders-ms/mysql:/var/lib/mysql

  orders-microservice:
    depends_on:
      - orders-database
    build:
      context: ./orders-ms
      dockerfile: dockerfile
    environment:
      NATS_SERVERS: ${NATS_SERVERS}
      DATABASE_URL: ${ORDERS_DATABASE_URL}

  # ==== AUTENTICACION ====
  auth-microservice:
    build:
      context: ./auth-ms
      dockerfile: dockerfile

    environment:
      DATABASE_URL: ${AUTH_DATABASE_URL}
      NATS_SERVERS: ${NATS_SERVERS}
      JWT_SECRET: ${AUTH_JWT_SECRET}
